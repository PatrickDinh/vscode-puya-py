name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
      - '.idea/**'

  workflow_dispatch:
    inputs:
      production-release:
        description: 'Production release?'
        required: true
        default: 'true'
      language:
        description: 'Extension language'
        required: true
        type: choice
        options:
          - TypeScript
          - Python
        default: 'TypeScript'

concurrency: create-release

permissions:
  contents: write # to be able to publish a GitHub release

env:
  PRODUCTION_RELEASE: ${{ github.ref_name == 'main' && inputs.production-release == 'true' }}

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # run npm ci preventing script access to npm auth token
      - run: npm ci --ignore-scripts

      - run: npm run audit

      - name: Build and Test (Algorand Python)
        uses: ./.github/actions/build-and-test
        with:
          working-directory: './extensions/algorand-python'

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Create GitHub release
        uses: ./.github/actions/create-release
        id: create-github-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-release: ${{ env.PRODUCTION_RELEASE }}

  deploy-extension:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: debug
        run: |
          echo "PRODUCTION_RELEASE: ${{ env.PRODUCTION_RELEASE }}"
          echo "language: ${{ inputs.language }}"
